<?php

namespace Tests;

//use App\Merchant;
//use App\User;
//
//use Faker\Factory;

//use App\Exceptions\Handler;
//use Illuminate\Contracts\Debug\ExceptionHandler;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->withoutExceptionHandling();
    }


    protected function signIn($user = null)
    {
        $user = $user ?: create('App\User');

        $this->actingAs($user);

        return $this;
    }

//    protected function disableExceptionHandling()
//    {
//        $this->oldExceptionHandler = $this->app->make(ExceptionHandler::class);
//
//        $this->app->instance(\ExceptionHandler::class, new class extends Handler {
//            public function __construct(){}
//            public function report(\Exception $e){}
//            public function render($request, \Exception $e) {
//                throw $e;
//            }
//        });
//    }
//
//    protected function withExceptionHandling()
//    {
//        $this->app->instance(ExceptionHandler::class, $this->oldExceptionHandler);
//
//        return $this;
//    }
//
//    protected $merchant;
//    protected $faker;
//    protected $user;
//
//    public function setUp()
//    {
//        parent::setUp();
//
//        $this->merchant = factory(Merchant::class)->create();
//        $this->user = factory(User::class)->create();
//        $this->faker = Factory::create();
//    }

}
